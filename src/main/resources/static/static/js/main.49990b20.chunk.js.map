{"version":3,"sources":["components/ListFavorites/FavoritesListDisplay/FavoritesListDisplay.module.css","components/NewContent/NewInTheaters/NewInTheatersDisplay.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/NewContent/NewContent.module.css","components/Footer/Footer.module.css","components/Navigation/Navitems/Navitems.module.css","components/Carousel/CarouselDisplay.module.css","Images/coming-soon-image.jpg","components/UI/Spinner/spinner.module.css","components/UI/Button/Button.module.css","components/UI/Modal/Modal.module.css","components/UI/BackDrop/BackDrop.module.css","components/Navigation/Navigationitems/NavigationItems.module.css","Images/logo.png","components/Logo/Logo.module.css","containers/Layout/Layout.module.css","components/LoginComponent/LoginComponent.module.css","components/NewUserComponent/NewUserComponent.module.css","components/Movie/Movie.module.css","axiosInstances/Axios.jsx","components/Carousel/CarouselDisplay.jsx","components/UI/Spinner/Spinner.jsx","containers/Carousels/Carousels.jsx","components/Authentication/AuthenticationService.js","components/API/FavoritesService.js","components/UI/favoritesButton.js","components/NewContent/NewInTheaters/NewInTheatersDisplay.jsx","components/UI/Button/Button.jsx","hoc/Aux.jsx","components/UI/BackDrop/BackDrop.jsx","components/UI/Modal/Modal.jsx","components/MovieSummary/MovieSummary.jsx","components/TVSummary/TVSummary.jsx","components/NewContent/NewContent.jsx","components/Movie/Movie.jsx","components/Footer/Footer.jsx","components/Navigation/Navitems/Navitems.jsx","components/Navigation/Navigationitems/Navigationitems.jsx","components/Logo/Logo.jsx","components/Navigation/Toolbar/Toolbar.jsx","containers/Layout/Layout.jsx","components/LoginComponent/LoginComponent.jsx","components/ErrorComponent/ErrorComponent.jsx","components/LogoutComponent/LogoutComponent.jsx","components/Authentication/AuthenticationRoute.jsx","components/UI/Validation/Validation.jsx","components/API/NewUserService.js","components/NewUserComponent/NewUserComponent.jsx","components/ListFavorites/FavoritesListDisplay/FavoritesListDisplay.jsx","components/ListFavorites/ListFavorites.jsx","containers/MovieBuilder/MovieBuilder.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","instance","axios","create","baseURL","CarouselDisplay","props","className","src","nullRecieved","image","NotFound","alt","classes","Cardcontent","title","releaseDate","voteAverage","spinner","Loader","Carousels","state","MovieData","get","then","Response","updatedMovieData","data","results","map","movieData","setState","catch","error","console","log","MovieResults","Spinner","this","key","id","poster_path","release_date","vote_average","slidesPerScroll","slidesPerPage","arrows","autoPlay","animationSpeed","infinite","Component","registerSuccessFullLoginForJwt","username","token","sessionStorage","setItem","defaults","headers","common","createJWTToken","localStorage","jwt_decode","removeItem","getItem","user","password","post","basicAuthHeader","interceptors","request","use","config","isUserLoggedIn","Authorization","favorite","delete","favoritesButton","isFavorite","singleFavorite","addFav","bind","removeFav","FavoritesService","GetSingleFavorite","res","e","preventDefault","favoriteDetails","description","overview","movieID","CreateFavorites","DeleteFavorite","Favorites_btn","style","color","onClick","NewInTheatersDisplay","AuthenticationService","styles","card","cardList","card__cover","genre_ids","show","limit","newtitle","length","split","reduce","acc","cur","push","join","limitTitle","button","disabled","disable","clicked","children","aux","Backdrop","modal","nextProps","nextState","Aux","modalClosed","Modal","transform","opacity","MovieSummary","selectedPost","Summary","TVSummary","PostSelection","tvid","summary","name","Postclicked","NewContent","NewInTheatersData","PopularMoviesData","PopularTvShowData","GenreData","loading","showItems","showMovieModal","showTVModal","MovieID","TvID","black","loadDataInTheaters","ShowSpinner","GetData","RemoveSpinner","loadDataPopMovie","loadDataPopTV","OpenMovieModalHandler","OpenTVModalHandler","CloseMovieModalHandler","CloseTVModalHandler","axiosP","all","spread","responses","genres","GetGenre","genreData","UpdatedNewInTheatersData","newInTheatersData","UpdatedPopularMovieData","popularMoviesData","UpdatedPopularTvShowData","popularTvShowData","prev","Error","fontSize","newInTheatersResults","PopularMoviesResults","PopularTvShowResults","ShowMorenewInTheatersResultsButton","Button","ShowMorePopularMoviesResultsButton","ShowMorePopularTvShowResultsButton","ids","el","forEach","genreids","element","slice","NewInTheaters","role","aria-labelledby","PopularMovies","PopularTvShow","closed","Content","Headcontent","data-toggle","href","aria-controls","aria-selected","Movie","footer","footer__copyright","navItem","NavigationItem","to","link","active","navigationItems","getLoggedInUserName","NavigationItems","logout","withRouter","logo","Logo","Toolbar","DesktopOnly","Layout","Login","hasLoginFailed","ShowSuccessMessage","handleChange","loginClicked","event","target","value","executeJwtAuthenticationService","response","history","Styles","design","type","onChange","ErrorComponent","LogoutComponent","AuthenticatedRoute","ValidationMessage","valid","message","RegisterNewUser","NewUserComponent","validateForm","isUsernameValid","isPasswordValid","isEmailValid","isFirstnameValid","isLastnameValid","formValid","updateUsername","validateUsername","errorMsg","updatePassword","validatePassword","test","updateEmail","email","validateEmail","updateFirstName","firstName","validateFirstname","firstname","updateLastName","lastName","validateLastName","lastname","addUser","NewUserService","CreateNewUser","Validation","favoritesListDisplay","infocard","front","card_image","back","ListFavorites","allFavorites","GetFavorites","UpdatedFavoritesData","favoritesdata","favoritesListResults","poster_Path","class","MovieBuilder","exact","path","component","LoginComponet","AuthenticationRoute","ListFavoritesComponent","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.49990b20.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"infocard\":\"FavoritesListDisplay_infocard__3eOlB\",\"front\":\"FavoritesListDisplay_front__11RyM\",\"back\":\"FavoritesListDisplay_back__14sVc\",\"card_image\":\"FavoritesListDisplay_card_image__2MTNO\",\"overview\":\"FavoritesListDisplay_overview__2rfgU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"NewInTheatersDisplay_card__25IE9\",\"card__cover\":\"NewInTheatersDisplay_card__cover__ZDDHe\",\"cardList\":\"NewInTheatersDisplay_cardList__KSowf\",\"heartIcon\":\"NewInTheatersDisplay_heartIcon__3Mc-r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"NewContent_Content__2Z54A\",\"Headcontent\":\"NewContent_Headcontent__1CwX7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1w0lV\",\"footer__copyright\":\"Footer_footer__copyright__3e1hI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"Navitems_NavigationItem__1c2Vn\",\"active\":\"Navitems_active__rbOec\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cardcontent\":\"CarouselDisplay_Cardcontent__1oJDr\"};","module.exports = __webpack_public_path__ + \"static/media/coming-soon-image.487bcc79.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"spinner_Loader__29A0m\",\"load2\":\"spinner_load2__GnBpe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2lgkF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"BackDrop_Backdrop__px6PQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__3I_Jf\"};","module.exports = __webpack_public_path__ + \"static/media/logo.f1d7b76d.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__PrDi6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"design\":\"LoginComponent_design__1kEaA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"design\":\"NewUserComponent_design__go1Zc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Movie_container__pt0yk\"};","import axios from 'axios';\n\n\n//set up all instances for movie get request \nconst instance = axios.create({\n    baseURL: 'https://hq-flix.herokuapp.com/api/auth'\n})\n\nexport default instance;","import React from 'react';\nimport classes from './CarouselDisplay.module.css';\nimport NotFound from '../../Images/coming-soon-image.jpg';\n\n\nconst findNull =  (nullRecieved) => {\n     if(nullRecieved === null){\n         return NotFound\n     }\n     return `https://image.tmdb.org/t/p/w185/${nullRecieved}`\n}\n\nconst CarouselDisplay = (props) => (\n    <div className={\"Card-cover\"}>\n    <img src={findNull(props.image)} alt=\"Demo\" />\n    <div className={`${classes.Cardcontent}`}>\n         <h6>{props.title}</h6>\n         <span>Release Date: {props.releaseDate}</span><br />\n        <span>Rating:{props.voteAverage} <i className=\"fas fa-star\"></i></span>\n    </div>\n    </div>\n)\n\nexport default CarouselDisplay;","import React from 'react';\nimport classes from './spinner.module.css'\n\nconst spinner = () => (\n    <div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner","import React, { Component } from 'react';\nimport axios from '../../axiosInstances/Axios';\nimport CarouselData from '../../components/Carousel/CarouselDisplay';\nimport Carousel from '@brainhubeu/react-carousel';\nimport '@brainhubeu/react-carousel/lib/style.css';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\n\nclass Carousels extends Component {\n    state = {\n        MovieData: []\n    }\n\n    componentDidMount(){\n        axios.get(`https://hq-flix.herokuapp.com/api/auth/cinema/movie/upcoming`)\n        .then(Response => {\n            const MovieData = Response.data.results;\n            const updatedMovieData = MovieData.map(movieData => {\n                return {...movieData}\n            });\n\n            this.setState({MovieData: updatedMovieData})\n        })\n        .catch(error => {\n            console.log(error);\n        })\n       }\n\n    render(){\n        let MovieResults = <Spinner />\n\n        if(!this.state.error){\n\n         MovieResults = this.state.MovieData.map(MovieResults => {\n            return (<CarouselData key={MovieResults.id}\n                             image={MovieResults.poster_path}\n                             title={MovieResults.title}\n                             releaseDate={MovieResults.release_date}\n                             voteAverage={MovieResults.vote_average} />\n            )\n\n        });\n    }\n        return (\n            <Carousel\n            slidesPerScroll={3}\n            slidesPerPage={3}\n            arrows\n            autoPlay={7000}\n            animationSpeed={1000}\n            infinite>\n        {MovieResults}\n        </Carousel>\n        )\n    }\n}\n\nexport default Carousels;\n\n","import axios from 'axios';\nimport jwt_decode from 'jwt-decode';\n\nclass AuthenticationService {\n\n    createJWTToken(token) {\n        return 'Bearer ' + token   \n    }\n\n    //Todo: dont forget to add logout button for this\n    logout() {\n        sessionStorage.removeItem('authenticatedUser')\n        localStorage.removeItem('jwtToken')\n    }\n\n    isUserLoggedIn() {\n        let user = sessionStorage.getItem('authenticatedUser')\n        if (user === null) {\n            return false\n        }\n        return true;\n    }\n\n    getLoggedInUserName() {\n        let user = sessionStorage.getItem('authenticatedUser');\n        if (user === null) {\n            return \"\"\n        }\n        return user;\n    }\n\n    gettoken(){\n        let token = sessionStorage.getItem('token');\n        if(token === null){\n            return \"\"\n        }\n        return token;\n    }\n\n    executeJwtAuthenticationService(username, password) {\n\n        return axios.post(\"https://hq-flix.herokuapp.com/api/auth/login\", {\n            username,\n            password\n        })\n    }\n\n    setupAxiosInterceptors(basicAuthHeader) {\n        axios.interceptors.request.use(\n            (config) => {\n                if (this.isUserLoggedIn) {\n\n                    config.headers.Authorization = basicAuthHeader\n                    sessionStorage.setItem(\"token\", config.headers.Authorization)\n                }\n                return config\n            }\n        )\n\n    }\n\n    registerSuccessFullLoginForJwt = (username, token) => {\n        sessionStorage.setItem('authenticatedUser', username)\n        //this.setupAxiosInterceptors(this.createJWTToken(token))\n\n        if(token){\n            axios.defaults.headers.common[\"Authorization\"] = this.createJWTToken(token);\n            localStorage.setItem(\"jwtToken\", this.createJWTToken(token))\n           jwt_decode(token)\n            \n        }else{\n            delete axios.defaults.headers.common[\"Authorization\"]\n        }\n    }\n}\n\nexport default new AuthenticationService()","import axios from 'axios';\n//import AuthenticatedService from '../Authentication/AuthenticationService.js';\n\nclass FavoritesService {\n\n    CreateFavorites(favorite) {\n        return axios.post(`https://hq-flix.herokuapp.com/api/users/favorites`, favorite);\n    }\n\n    GetFavorites() {\n        return axios.get(`https://hq-flix.herokuapp.com/api/users/all`)\n    }\n\n    GetSingleFavorite(id) {\n        return axios.get(`https://hq-flix.herokuapp.com/api/users/${id}`)\n    }\n\n    DeleteFavorite(id) {\n        return axios.delete(`https://hq-flix.herokuapp.com/api/users/${id}`)\n    }\n}\n\nexport default new FavoritesService();","import React, { Component } from 'react'\nimport FavoritesService from '../API/FavoritesService';\n\n\nclass favoritesButton extends Component {\nconstructor(){\n    super();\n    this.state ={\n        id: \"\",\n        isFavorite: false,\n        singleFavorite: {}\n    }\n    this.addFav = this.addFav.bind(this)\n    this.removeFav = this.removeFav.bind(this)\n}\n\n   componentDidMount(){\n       //axios that returns single favorite by the props.id\n       if(this.props.id){\n      FavoritesService.GetSingleFavorite(this.props.id).then(res => {\n          console.log(res.data)\n          this.setState({singleFavorite: res.data})\n      })\n   }\n}\n\n   addFav(e){   \n    e.preventDefault()\n    let favoriteDetails = {\n    title: this.props.title,\n    description: this.props.overview,\n    poster_path: this.props.image,\n    movieID: this.props.id\n   }\n     \nFavoritesService.CreateFavorites(favoriteDetails);\nthis.setState({singleFavorite: favoriteDetails})\n }\n\n removeFav(e){\n    e.preventDefault()\n    FavoritesService.DeleteFavorite(this.state.singleFavorite.movieID)\n    this.setState({singleFavorite: {}})\n }\n\n\n    render() {\n        //check if the props id = the id returned by axios\n            let Favorites_btn = (\n                this.props.id === this.state.singleFavorite.movieID ? (\n                    <i className={\"fas fa-heart\"} style={{color: \"red\"}} onClick={(e) => this.removeFav(e)}>remove from favorites</i>\n                   ) :(\n                    <i className={\"far fa-heart\"} style={{color: \"red\"}} onClick={(e) => this.addFav(e)}>add to favorites</i>\n                   )\n            )\n        \n        \n       \n\n        return (\n            <div >\n                {Favorites_btn}\n            </div>\n        )\n    }\n}\n\nexport default favoritesButton;\n","import React, {Component} from \"react\";\nimport styles from './NewInTheatersDisplay.module.css';\nimport AuthenticationService from '../../Authentication/AuthenticationService.js';\nimport FavoritesButton from \"../../UI/favoritesButton\";\n\nclass NewInTheatersDisplay extends Component{                                   \n    \nrender(){\n\nconst isUserLoggedIn = AuthenticationService.isUserLoggedIn();\n    \nconst limitTitle = (title, limit = 150) => {\n    const newtitle = [];\n     if(title.length > limit){\n         title.split(' ').reduce((acc, cur) => {\n            if(acc + cur.length <= limit){\n               newtitle.push(cur);\n            }\n            return acc + cur.length;\n         }, 0);\n\t\treturn `${newtitle.join(' ')} ...Click to see more`;\n     }\n     return title;\n}\n\nreturn(\n\n    <div id={this.props.id} className=\"col-sm-12 col-lg-6 col-md-12 col-xs-12\">\n    <div className={`${styles.card} ${styles.cardList}`} >\n            <div className=\"row\">\n                <div className=\"col-12 col-sm-4\">\n                    <div className={`${styles.card__cover}`}>\n                        <img id=\"image\" src={`https://image.tmdb.org/t/p/w185/${this.props.image}`} alt={`${this.props.title}`} />               \n                    </div>\n                </div>\n\n                    <div className=\"col-12 col-sm-8\">\n                        <div className=\"card__content\">\n                            <li>\n                            <h3 className=\"card__title\">{this.props.title}</h3>\n                            </li>\n\n                        {isUserLoggedIn && <div><FavoritesButton id={this.props.id}\n                                                                 title={this.props.title}\n                                                                 overview={this.props.overview}\n                                                                 image={this.props.image} /></div>}\n\n                                <span className=\"card__category\">\n                                {this.props.genre_ids}\n                                </span>\n\n                    <div className=\"card__wrap\">\n                            <span className=\"card__rate\"><i className=\"fas fa-star\"></i>{this.props.vote_average}</span>\n                            <ul className=\"card__list\">                \n                            </ul>\n                    </div>\n\n                    <div className=\"card__description\" onClick={this.props.show}>\n                        <p>{limitTitle(this.props.overview)}</p>\n                            </div>\n                    </div>\n            </div>\n    </div>\n</div>\n</div>\n\n)\n}\n}\n\n\nexport default NewInTheatersDisplay;","import React from 'react';\nimport styles from './Button.module.css'\n\nconst button = (props) => (\n    <div className={\"col-12\"}>\n        <button disabled={props.disable} \n                onClick={props.clicked}\n                className={styles.button}>{props.children}</button>\n    </div>\n\n);\n\nexport default button;","//higher order component to have adjacent elements \nconst aux = (props) => props.children; \n\nexport default aux;","import React from 'react';\nimport classes from './BackDrop.module.css';\n\nconst Backdrop = (props) => (\n   props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null \n);\n\n\nexport default Backdrop","import React, {Component}from 'react';\nimport classes from './Modal.module.css';\nimport Aux from '../../../hoc/Aux';\nimport Backdrop from '../BackDrop/BackDrop';\n\nclass modal extends Component {\n\n    shouldComponentUpdate(nextProps, nextState){\n           return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n\n    render(){\n        return(\n            <Aux>\n            <Backdrop  show={this.props.show} clicked={this.props.modalClosed}/>\n        <div className={classes.Modal}\n        style={{transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n        opacity: this.props.show ? '1' : '0'}}> \n            {this.props.children}\n        </div>\n        </Aux>\n        );\n    }\n}\n\nexport default modal;","import React, { Component }  from 'react';\nimport axios from '../../axiosInstances/Axios';\nimport Spinner from '../UI/Spinner/Spinner';\n\n\nclass MovieSummary extends Component {\nstate = {\n    selectedPost: null\n}\n\n    componentDidUpdate(){\n       axios.get(`/cinema/movie/${this.props.id}`)\n       .then(Response => {\n           this.setState({selectedPost: Response.data})\n       })\n      }\n\n    render(){\n        let Summary = null\n     if(this.props.id){\n         Summary = <Spinner />\n     }\n\n        if(this.state.selectedPost){\n          Summary = (\n                <div>\n                    <img src={`https://image.tmdb.org/t/p/w185/${this.state.selectedPost.poster_path}`} alt={this.state.selectedPost.title} />\n                <h3>{this.state.selectedPost.title}</h3>\n          <p>{this.state.selectedPost.overview}</p>\n          <button onClick={this.props.clicked}>Close</button>\n                </div>\n            )\n        \n    }\n        return (\n            <div>\n                 {Summary}\n            </div>\n        )\n    }\n} \n\nexport default MovieSummary;","import React, { Component } from \"react\";\nimport axios from '../../axiosInstances/Axios';\nimport Spinner from '../UI/Spinner/Spinner';\n\n\nclass TVSummary extends Component{\n    state = {\n        PostSelection: null\n    }\n\n    componentDidUpdate(){\n        if(this.props.tvid){\n               axios.get(`/cinema/tv/${this.props.tvid}`)\n               .then(Response => {\n                   this.setState({PostSelection: Response.data})\n    }).catch(error => {\n        console.log(error)\n    })\n  }\n    }\n\n    render(){\n        let summary = null\n\n        if(this.props.tvid){\n            summary = <Spinner />\n        }\n\n        if(this.state.PostSelection){\n            summary = (<div>\n                    <img src={`https://image.tmdb.org/t/p/w185/${this.state.PostSelection.poster_path}`} alt={this.state.PostSelection.name} />\n                <h3>{this.state.PostSelection.name}</h3>\n          <p>{this.state.PostSelection.overview}</p>\n          <button onClick={this.props.Postclicked}>Close</button>\n                </div>\n            )\n            }\n        return(\n        <div>{summary}</div>\n        )\n    }\n}\n\nexport default TVSummary","import React, { Component } from 'react';\nimport classes from './NewContent.module.css';\nimport axios from '../../axiosInstances/Axios';\nimport axiosP from 'axios';\nimport Display from '../../components/NewContent/NewInTheaters/NewInTheatersDisplay';\nimport Button from \"../UI/Button/Button\";\nimport Spinner from '../UI/Spinner/Spinner';\nimport Aux from '../../hoc/Aux';\nimport Modal from '../UI/Modal/Modal';\nimport MovieModalSummary from '../MovieSummary/MovieSummary';\nimport TVModalSummary from '../TVSummary/TVSummary';\n\nconst NewInTheatersURL = `/cinema/movie/now_playing`;\nconst PopularMoviesURL = `/cinema/movie/popular`;\nconst PopularTvShowURL = `/cinema/tv/popular`;\nconst GenreURL = `/cinema/genre`;\n\nclass NewContent extends Component {\n    state = {\n        NewInTheatersData: [],\n        PopularMoviesData: [],\n        PopularTvShowData: [],\n        GenreData: [],\n        loading: false,\n        showItems: 4,\n        showMovieModal: false,\n        showTVModal: false,\n        MovieID: null,\n        TvID: null,\n        black: true,\n        error: true\n    }\n\n    componentDidMount() {\n        axiosP.all([\n            axios.get(NewInTheatersURL),\n            axios.get(PopularMoviesURL),\n            axios.get(PopularTvShowURL),\n            axios.get(GenreURL)\n        ])\n            .then(axiosP.spread((...responses) => {\n                const NewInTheatersData = responses[0].data.results;\n                const PopularMoviesData = responses[1].data.results;\n                const PopularTvShowData = responses[2].data.results;\n                const GenreData = responses[3].data.genres;\n\n                //GETgenre\n                const GetGenre = GenreData.map(genreData => {\n                    return { ...genreData }\n                });\n\n                //NewInTheaters\n                const UpdatedNewInTheatersData = NewInTheatersData.map(newInTheatersData => {\n                    return { ...newInTheatersData }\n                });\n                //PopularMovie\n                const UpdatedPopularMovieData = PopularMoviesData.map(popularMoviesData => {\n                    return { ...popularMoviesData }\n                });\n                //PopularTvShow\n                const UpdatedPopularTvShowData = PopularTvShowData.map(popularTvShowData => {\n                    return { ...popularTvShowData }\n                });\n\n                this.setState({\n                    error:false,\n                    NewInTheatersData: UpdatedNewInTheatersData,\n                    GenreData: GetGenre,\n                    PopularMoviesData: UpdatedPopularMovieData,\n                    PopularTvShowData: UpdatedPopularTvShowData\n                });\n            })\n            ).catch(()=> this.setState({error: true}) )\n    }\n\n    ShowSpinner() {\n        this.setState({ loading: true });\n    }\n\n    RemoveSpinner() {\n        this.setState({ loading: false })\n    }\n\n    GetData() {\n        this.setState((prev) => {\n            return { showItems: prev.showItems + 2 }\n        })\n    }\n\n    loadDataInTheaters = () => {\n        this.ShowSpinner();\n        this.GetData();\n        this.RemoveSpinner();\n    }\n\n    loadDataPopMovie = () => {\n        this.ShowSpinner();\n        this.GetData();\n        this.RemoveSpinner();\n    }\n\n    loadDataPopTV = () => {\n        this.ShowSpinner();\n        this.GetData();\n        this.RemoveSpinner();\n    }\n\n    OpenMovieModalHandler = (id) => {\n        this.setState({ showMovieModal: true, MovieID: id })\n    }\n\n    OpenTVModalHandler = (id) => {\n        this.setState({ showTVModal: true, TvID: id })\n    }\n\n    CloseMovieModalHandler = () => {\n        this.setState({ showMovieModal: false });\n    }\n\n    CloseTVModalHandler = () => {\n        this.setState({ showTVModal: false });\n    }\n\n    render() {\n        let Error = <p style={{color:\"white\", fontSize:\"25px\"}}>Something went wrong!!! Contact Support </p>\n        let newInTheatersResults = <Spinner />;\n        let PopularMoviesResults = <Spinner />;\n        let PopularTvShowResults = <Spinner />;\n        let ShowMorenewInTheatersResults = null;\n        let ShowMorePopularMoviesResults = null;\n        let ShowMorePopularTvShowResults = null;\n        let ShowMorenewInTheatersResultsButton = <Button clicked={() => this.loadDataInTheaters()}> Show More </Button>;\n        let ShowMorePopularMoviesResultsButton = <Button clicked={() => this.loadDataPopMovie()}> Show More </Button>;\n        let ShowMorePopularTvShowResultsButton = <Button clicked={() => this.loadDataPopMovie()}> Show More </Button>;\n\n\n        const ids = (id) => {\n            let el = []\n            this.state.GenreData.forEach(genreids => {\n                id.forEach(element => {\n                    if (element === genreids.id) {\n                        el.push(genreids.name)\n                    }\n                })\n            })\n            return el.join(', ')\n        }\n\n        if (this.state.loading) {\n            ShowMorenewInTheatersResultsButton = <Spinner />\n            ShowMorePopularMoviesResultsButton = <Spinner />\n            ShowMorePopularTvShowResultsButton = <Spinner />\n        }\n\n\n        if (!this.state.error) {\n            newInTheatersResults = this.state.NewInTheatersData.slice(0, this.state.showItems).map(newInTheatersResults => {\n                return (\n                    <Display key={newInTheatersResults.id}\n                        image={newInTheatersResults.poster_path}\n                        title={newInTheatersResults.title}\n                        show={() => this.OpenMovieModalHandler(newInTheatersResults.id)}\n                        id={newInTheatersResults.id}\n                        genre_ids={ids(newInTheatersResults.genre_ids)}\n                        vote_average={newInTheatersResults.vote_average}\n                        overview={newInTheatersResults.overview} />\n                )\n            });\n\n            PopularMoviesResults = this.state.PopularMoviesData.slice(0, this.state.showItems).map(PopularMoviesResults => {\n                return (\n                    <Display key={PopularMoviesResults.id}\n                        image={PopularMoviesResults.poster_path}\n                        title={PopularMoviesResults.title}\n                        show={() => this.OpenMovieModalHandler(PopularMoviesResults.id)}\n                        id={PopularMoviesResults.id}\n                        genre_ids={ids(PopularMoviesResults.genre_ids)}\n                        vote_average={PopularMoviesResults.vote_average}\n                        overview={PopularMoviesResults.overview} />\n                )\n            })\n\n            PopularTvShowResults = this.state.PopularTvShowData.slice(0, this.state.showItems).map(PopularTvShowData => {\n                return (\n\n                    <Display key={PopularTvShowData.id}\n                        image={PopularTvShowData.poster_path}\n                        title={PopularTvShowData.name}\n                        show={() => this.OpenTVModalHandler(PopularTvShowData.id)}\n                        id={PopularTvShowData.id}\n                        genre_ids={ids(PopularTvShowData.genre_ids)}\n                        vote_average={PopularTvShowData.vote_average}\n                        overview={PopularTvShowData.overview} />\n                )\n            })\n        }\n\n        if(this.state.error){\n          newInTheatersResults = Error;\n          PopularMoviesResults = Error;\n          PopularTvShowResults = Error;\n        }\n\n        const NewInTheaters = <div className=\"tab-pane fade active show\" id=\"tab-1\" role=\"tabpanel\" aria-labelledby=\"1-tab\">\n            <div className=\"theater row\">\n                {newInTheatersResults}\n\n                {ShowMorenewInTheatersResults}\n                {this.state.showItems < this.state.NewInTheatersData.length && ShowMorenewInTheatersResultsButton}\n            </div>\n        </div>;\n\n        const PopularMovies = <div className=\"tab-pane fade\" id=\"tab-2\" role=\"tabpanel\" aria-labelledby=\"2-tab\">\n            <div className=\"popMovie row\">\n                {PopularMoviesResults}\n                {ShowMorePopularMoviesResults}\n                {this.state.showItems < this.state.PopularMoviesData.length && ShowMorePopularMoviesResultsButton}\n            </div>\n        </div>;\n\n        const PopularTvShow = <div className=\"tab-pane fade\" id=\"tab-3\" role=\"tabpanel\" aria-labelledby=\"3-tab\">\n            <div className=\"popTVshow row\">\n                {PopularTvShowResults}\n                {ShowMorePopularTvShowResults}\n                {this.state.showItems < this.state.PopularTvShowData.length && ShowMorePopularTvShowResultsButton}\n            </div>\n        </div>\n\n        return (\n            <Aux>\n                <Modal show={this.state.showMovieModal} closed={this.CloseMovieModalHandler}>\n\n                    <MovieModalSummary\n                        id={this.state.MovieID}\n                        clicked={this.CloseMovieModalHandler} />\n                </Modal>\n\n                {/* two different modals for two different api calls  */}\n                <Modal show={this.state.showTVModal} closed={this.CloseTVModalHandler}>\n                    <TVModalSummary\n                        tvid={this.state.TvID}\n                        Postclicked={this.CloseTVModalHandler} />\n\n                </Modal>\n\n                <section className={classes.Content}>\n                    <div className={classes.Headcontent}>\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <h2>NewContent</h2>\n                                    <ul className=\"nav nav-tabs content--tabs\" id=\"content--tabs\" role=\"tablist\">\n                                        <li className=\"nav-item\">\n                                            <a className=\"nav-link active show\" data-toggle=\"tab\" href=\"#tab-1\" role=\"tab\" aria-controls=\"tab-1\" aria-selected=\"true\">New In Theaters</a>\n                                        </li>\n                                        <li className=\"nav-item\">\n                                            <a className=\"nav-link\" data-toggle=\"tab\" href=\"#tab-2\" role=\"tab\" aria-controls=\"tab-2\" aria-selected=\"false\">Movies</a>\n                                        </li>\n                                        <li className=\"nav-item\">\n                                            <a className=\"nav-link\" data-toggle=\"tab\" href=\"#tab-3\" role=\"tab\" aria-controls=\"tab-3\" aria-selected=\"false\">TV Shows</a>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"container\">\n                            <div className=\"tab-content\" id=\"myTabContent\">\n                                {NewInTheaters}\n                                {PopularMovies}\n                                {PopularTvShow}\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </Aux>\n        );\n    }\n};\n\nexport default NewContent;","    import React from 'react';\n    import './Movie.module.css';\n    import Carouel from '../../containers/Carousels/Carousels';\n    import NewContent from '../NewContent/NewContent';\n\n    const Movie = () => (\n        \n            <div>\n                <main className={\"container\"}>\n                <h1 className={'text-center mt-5 pt-5'}>New Movies Coming Soon To Theather</h1>\n                <Carouel />\n                </main>  \n                <NewContent />   \n                 \n            </div>\n    )\n    \n\n    export default Movie;","import React from 'react';\nimport styles from './Footer.module.css'\n\nconst footer = () => (\n    <footer className={styles.footer}>\n    <div className=\"container\">\n        <div className=\"row\">\n        <div className=\"col-6 col-sm-4 col-md-3\">\n                <h6 className=\"footer__title\">Resources</h6>\n                <ul className=\"footer__list\">\n                    <li><a href=\"/\">About Us</a></li>\n                    <li><a href=\"/\">Pricing Plan</a></li>\n                    <li><a href=\"/\">Help</a></li>\n                </ul>\n            </div>\n         \n            <div className=\"col-6 col-sm-4 col-md-3\">\n                <h6 className=\"footer__title\">Legal</h6>\n                <ul className=\"footer__list\">\n                    <li>Terms of Use</li>\n                    <li>Privacy Policy</li>\n                    <li>Security</li>\n                </ul>\n            </div>\n          \n            <div className=\"col-12 col-sm-4 col-md-3\">\n                <h6 className=\"footer__title\">Contact</h6>\n                <ul className=\"footer__list\">\n                    <li><a href=\"tel:+18002345678\">+1 (555) 555-5555</a></li>\n                    <li><a href=\"mailto:hayesevan@rocketmail.com\">support@HQflixs.com</a></li>\n                </ul>\n                <ul className=\"footer__social\">\n                    <li className=\"facebook\"><a href=\"/\"><i className=\"fab fa-facebook-square\"></i></a></li>\n                    <li className=\"instagram\"><a href=\"/\"><i className=\"fab fa-instagram\"></i></a></li>\n                    <li className=\"twitter\"><a href=\"/\"><i className=\"fab fa-twitter\"></i></a></li>\n                </ul>\n            </div>\n            \n            <div className=\"col-12\">\n                <div className={styles.footer__copyright}>\n                    <small>© 2019 HQflix. Create by Evan Hayes</small>\n\n                    <ul>\n                        <li>Terms of Use</li>\n                        <li>Privacy Policy</li>\n                        <li>This product uses the TMDb API but is not endorsed or certified by TMDb.</li>\n                    </ul>\n                </div>\n            </div>\n        \n        </div>\n    </div>\n</footer>\n)\n\nexport default footer;","import React from 'react';\nimport classes from './Navitems.module.css';\nimport {Link} from 'react-router-dom';\n\nconst navItem = (props) => (\n       <li className={classes.NavigationItem}>\n           <Link \n           to={props.link}\n           className={props.active ? classes.active : null} onClick={props.clicked}>{props.children}</Link>\n       </li>\n  \n);\n\nexport default navItem;","import React from 'react';\nimport NavItem from '../Navitems/Navitems';\nimport classes from './NavigationItems.module.css';\nimport { Component } from 'react';\nimport AuthenticationService from '../../Authentication/AuthenticationService.js';\nimport { withRouter } from 'react-router-dom';\n\n\nclass navigationItems extends Component {\n\n   render() {\n\n      const isUserLoggedIn = AuthenticationService.isUserLoggedIn();\n      const username = AuthenticationService.getLoggedInUserName();\n\n      return (\n         <ul className={classes.NavigationItems}>\n            {!isUserLoggedIn && <NavItem link=\"/register\">Register</NavItem>}\n            {!isUserLoggedIn && <NavItem link=\"/SignIn\">Login</NavItem>}\n            {isUserLoggedIn && <NavItem link={`/welcome:${username}`}>Home</NavItem>}\n            {isUserLoggedIn && <NavItem link={`/${username}/favorites`}>Favorites</NavItem>}\n            {isUserLoggedIn && <NavItem link=\"/\" clicked={AuthenticationService.logout}>LogOut</NavItem>}\n         </ul>\n      )\n   }\n}\n\nexport default withRouter(navigationItems);","import React from 'react';\nimport Logo from '../../Images/logo.png';\nimport classes from './Logo.module.css'\n\nconst logo = () => (\n <div className={classes.Logo}>\n     <img src={Logo} alt=\"HQ Flix\" />\n </div>\n);\n\nexport default logo; ","import React from 'react';\nimport classes from './Toolbar.module.css';\nimport NavigationItems from '../Navigationitems/Navigationitems.jsx';\nimport Logo from '../../Logo/Logo';\n\n\nconst Toolbar = () => (\n <header className={classes.Toolbar}>\n     <div className={classes.Logo}>\n         <Logo />\n     </div>\n   <nav className={classes.DesktopOnly}>\n       <NavigationItems />\n   </nav>\n  </header>\n);\n\n\nexport default Toolbar;","import React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport ToolBar from '../../components/Navigation/Toolbar/Toolbar';\nimport classes from './Layout.module.css'\n\nclass Layout extends Component {\n  render(){\n      return(\n      <Aux>\n       <ToolBar />\n       <main className={classes.Content}>\n              {this.props.children}\n         </main>\n            </Aux>\n      )\n  }\n}\n\nexport default Layout;","import React, { Component } from 'react';\nimport Button from '../UI/Button/Button';\nimport AuthenticationService from '../Authentication/AuthenticationService.js';\nimport {Link} from 'react-router-dom';\nimport Styles from './LoginComponent.module.css'\n\n class Login extends Component {\n   \n    constructor(){\n        super()\n        this.state = {\n            username: '',\n            password: '',\n            hasLoginFailed: false,\n            ShowSuccessMessage: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.loginClicked = this.loginClicked.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({ [event.target.name]: event.target.value })\n    }\n\n    loginClicked() {\n\n        AuthenticationService.executeJwtAuthenticationService(this.state.username, this.state.password).then(\n            (response)=> {\n                AuthenticationService.registerSuccessFullLoginForJwt(this.state.username, response.data);\n                this.setState({ShowSuccessMessage: true});\n                this.props.history.push(`/welcome/${this.state.username}`)\n            }\n        ).catch(()=> {\n            this.setState({hasLoginFailed: true, ShowSuccessMessage:false})\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"container\">\n                <h1>Login</h1>\n                <Button><Link style={{color: \"white\"}} to=\"/register\">Create New User</Link></Button>\n                <div className={Styles.design}>\n                <div className=\"form-group col-md-10\">\n                {this.state.hasLoginFailed && <div className=\" alert alert-warning\">Invalid Credentials</div>}\n           <label>Username</label>\n          <input type=\"username\" className=\"form-control\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n       </div>\n        <div className=\"form-group col-md-10\">\n        <label>Password</label>\n        <input type=\"password\" className=\"form-control\" name=\"password\" value={this.state.password} onChange={this.handleChange}/>\n       </div>\n       </div>\n        <Button clicked={this.loginClicked}>Submit</Button>\n                </div>\n            </div>\n        )\n    }\n } \n\n export default Login;","import React from 'react';\n\nfunction ErrorComponent () {\n    return <div>Error Occured. Contact Support</div>\n}\n\nexport default ErrorComponent;","import React, {Component} from 'react'\n\nclass LogoutComponent extends Component{\n\n    render(){\n        return(\n            <div>\n                <h1>You Are Logged Out</h1>\n                <div className=\"container\">\n                    Thank You For using out application.  \n                </div>\n                </div>\n        )\n    }\n    \n    }\n\n    export default LogoutComponent;","import React, { Component } from \"react\";\nimport AuthenticationService from \"./AuthenticationService.js\";\nimport { Route, Redirect } from \"react-router-dom\";\n\n\nclass AuthenticatedRoute extends Component{\n   render(){\n       if(AuthenticationService.isUserLoggedIn()) {\n           return <Route {...this.props} />\n       } else {\n          return <Redirect to=\"/SignIn\" />\n       }\n   }\n\n}\n\nexport default AuthenticatedRoute;","import React from 'react'\n\nfunction ValidationMessage(props) {\n    if (!props.valid) {\n      return <div>{props.message}</div>\n    }\n    \n    return null;\n  }\n\n  export default ValidationMessage;","import axios from 'axios';\n\nclass NewUserService {\n\n    CreateNewUser(RegisterNewUser){\n       return axios.post('https://hq-flix.herokuapp.com/api/auth/register', RegisterNewUser);\n    }\n\n}\n\nexport default new NewUserService();\n","import React, { Component } from 'react';\nimport ValidationMsg from '../UI/Validation/Validation';\nimport Button from '../UI/Button/Button';\nimport Styles from './NewUserComponent.module.css';\nimport NewUserService from '../API/NewUserService.js';\nimport { withRouter } from \"react-router-dom\";\n\n\nclass NewUserComponent extends Component {\n  constructor() {\n    super()\n    this.state = {\n      username: '',\n      isUsernameValid: false,\n      password: '',\n      isPasswordValid: false,\n      email: '',\n      isEmailValid: false,\n      firstName: '',\n      isFirstnameValid: false,\n      lastName: '',\n      isLastnameValid: false,\n      formValid: false,\n      errorMsg: {}\n    }\n  }\n\n\n\n  validateForm = () => {\n    const { isUsernameValid, isPasswordValid, isEmailValid, isFirstnameValid, isLastnameValid } = this.state;\n    this.setState({ formValid: isUsernameValid && isPasswordValid && isEmailValid && isFirstnameValid && isLastnameValid })\n  }\n\n  updateUsername = (username) => {\n    this.setState({ username }, this.validateUsername)\n  }\n\n  validateUsername = () => {\n    const { username } = this.state;\n    let isUsernameValid = true;\n    let errorMsg = { ...this.state.errorMsg }\n\n    if (username.length < 5) {\n      isUsernameValid = false;\n      errorMsg.username = 'Must be at least 5 characters long'\n    }\n\n    this.setState({ isUsernameValid, errorMsg }, this.validateForm)\n  }\n\n  updatePassword = (password) => {\n    this.setState({ password }, this.validatePassword)\n  }\n\n  validatePassword = () => {\n    const { password } = this.state;\n    let isPasswordValid = true;\n    let errorMsg = { ...this.state.errorMsg }\n\n    if (password.length < 5) {\n      isPasswordValid = false;\n      errorMsg.password = \"Must be atleast 5 characters long\"\n    }\n    else if (!/[A-Z]/.test(password)) {\n      isPasswordValid = false;\n      errorMsg.password = \"Must include capital letter\"\n    }\n    else if (!/[0-9]/.test(password)) {\n      isPasswordValid = false;\n      errorMsg.password = \"Must include a number\"\n    }\n    this.setState({ isPasswordValid, errorMsg }, this.validateForm)\n  }\n\n  updateEmail = (email) => {\n    this.setState({ email }, this.validateEmail)\n  }\n\n  validateEmail = () => {\n    const { email } = this.state;\n    let isEmailValid = true;\n    let errorMsg = { ...this.state.errorMsg }\n\n\n    if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n      isEmailValid = false;\n      errorMsg.email = 'Invalid email format need @'\n    }\n\n    this.setState({ isEmailValid, errorMsg }, this.validateForm)\n  }\n\n  updateFirstName = (firstName) => {\n    this.setState({ firstName }, this.validateFirstname)\n  }\n\n  validateFirstname = () => {\n    const { firstName } = this.state;\n    let isFirstnameValid = true;\n    let errorMsg = { ...this.state.errorMsg }\n\n    if (firstName.length <= 0) {\n      isFirstnameValid = false;\n      errorMsg.firstname = \"Please Enter First Name\"\n    }\n\n    this.setState({ isFirstnameValid, errorMsg }, this.validateForm)\n  }\n\n  updateLastName = (lastName) => {\n    this.setState({ lastName }, this.validateLastName)\n  }\n\n  validateLastName = () => {\n    const { lastName } = this.state;\n    let isLastnameValid = true;\n    let errorMsg = { ...this.state.errorMsg }\n\n    if (lastName.length <= 0) {\n      isLastnameValid = false;\n      errorMsg.lastname = \"Please Enter Last Name\"\n    }\n\n    this.setState({ isLastnameValid, errorMsg }, this.validateForm)\n    this.addUser = this.addUser.bind(this);\n  }\n\n  addUser(e) {\n    e.preventDefault();\n\n    let RegisterNewUser = {\n      username: this.state.username,\n      password: this.state.password,\n      email: this.state.email,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName\n    }\n  \n    NewUserService.CreateNewUser(RegisterNewUser)\n      .then(() => this.props.history.push('/SignIn'))\n  }\n\n  render() {\n    return (\n      <div className={Styles.design}>\n        <div className=\"form-group\">\n          <div className=\"form-group col-md-6 offset-md-3\">\n            <label>Username</label>\n            <ValidationMsg className=\"alert alert-warning\" valid={this.state.isUsernameValid} message={this.state.errorMsg.username} />\n            <input type=\"text\" className=\"form-control\" name=\"username\" onChange={(e) => this.updateUsername(e.target.value)} value={this.state.username} />\n          </div>\n          <div className=\"form-group col-md-6 offset-md-3\">\n            <label>Password</label>\n            <ValidationMsg className=\"alert alert-warning\" valid={this.state.isPasswordValid} message={this.state.errorMsg.password} />\n            <input type=\"text\" className=\"form-control\" name=\"password\" onChange={(e) => this.updatePassword(e.target.value)} value={this.state.password} />\n          </div>\n        </div>\n        <div className=\"form-group col-md-6 offset-md-3\">\n          <label>Email</label>\n          <ValidationMsg className=\"alert alert-warning\" valid={this.state.isEmailValid} message={this.state.errorMsg.email} />\n          <input type=\"email\" className=\"form-control\" name=\"email\" onChange={(e) => this.updateEmail(e.target.value)} value={this.state.email} />\n        </div>\n        <div className=\"form-group col-md-6 offset-md-3\">\n          <label>First Name</label>\n          <ValidationMsg className=\"alert alert-warning\" valid={this.state.isFirstnameValid} message={this.state.errorMsg.firstname} />\n          <input type=\"text\" className=\"form-control\" name=\"firstName\" onChange={(e) => this.updateFirstName(e.target.value)} value={this.state.firstname} />\n        </div>\n        <div className=\"form-group col-md-6 offset-md-3\">\n          <label>Last Name</label>\n          <ValidationMsg className=\"alert alert-warning\" valid={this.state.isLastnameValid} message={this.state.errorMsg.lastname} />\n          <input type=\"text\" className=\"form-control\" name=\"lastName\" onChange={(e) => this.updateLastName(e.target.value)} value={this.state.lastname} />\n        </div>\n\n        <Button type=\"submit\" className=\"btn btn-success\" disabled={!this.state.formValid} clicked={this.addUser}>Sign in</Button>\n      </div>\n    )\n  }\n}\n\n\n\nexport default withRouter(NewUserComponent);","import React, { Component } from 'react';\nimport styles from './FavoritesListDisplay.module.css'\nclass favoritesListDisplay extends Component{\n\n   render(){\n\n   return(   \n      \n      <div className={styles.infocard}>\n      <div className={styles.front}>\n         <img className={styles.card_image} src={`https://image.tmdb.org/t/p/w185/${this.props.image}`} alt={this.props.title}/>\n      </div>\n   <div className={styles.back}>\n      <h2>{this.props.title}</h2>\n      <p className={styles.overview}>\n         {this.props.overview}\n      </p>\n   </div>\n</div>\n\n)\n   }\n}\n\nexport default favoritesListDisplay;","import React, { Component } from \"react\";\nimport FavoritesService from \"../API/FavoritesService\";\nimport FavoriesList from './FavoritesListDisplay/FavoritesListDisplay';\n\n\nclass ListFavorites extends Component{\n   state = {\n       allFavorites: []\n   }\n componentDidMount(){\n     FavoritesService.GetFavorites().then(res => {\n         const FavoritesData = res.data;\n         \n         const UpdatedFavoritesData = FavoritesData.map(favoritesdata => {\n             return {...favoritesdata}\n         });\n         this.setState({allFavorites: UpdatedFavoritesData});\n     }).catch(error => {\n        console.log(error);\n        \n    })\n }\n\n    render(){\n        let favoritesListResults = <p>Something went wrong. Contact Support!</p>\n\n        if(!this.state.error){\n           favoritesListResults = this.state.allFavorites.map(allFavorites => {\n               return(\n                <FavoriesList key={allFavorites.id}\n                              image={allFavorites.poster_Path}\n                              title={allFavorites.title}\n                              overview={allFavorites.description}/>\n               )\n           })\n        }\n\n        return(\n            <div className=\"container\">\n         <h1 className=\"heading\">Favorites</h1>\n         <div className=\"row\">\n         <div class=\"card-columns\">\n         {favoritesListResults}\n         </div>\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default ListFavorites;","import React, { Component } from \"react\";\nimport Movie from '../../components/Movie/Movie';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Footer from '../../components/Footer/Footer';\nimport Layout from '../../containers/Layout/Layout';\nimport LoginComponet from '../../components/LoginComponent/LoginComponent';\nimport ErrorComponent from '../../components/ErrorComponent/ErrorComponent';\nimport LogoutComponent from '../../components/LogoutComponent/LogoutComponent';\nimport AuthenticationRoute from '../../components/Authentication/AuthenticationRoute';\nimport NewUserComponent from '../../components/NewUserComponent/NewUserComponent';\nimport ListFavoritesComponent from '../../components/ListFavorites/ListFavorites';\n\n\nclass MovieBuilder extends Component {\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <Layout>\n            <Switch>\n              <Route exact path=\"/\" component={Movie} />\n              <Route exact path=\"/SignIn\" component={LoginComponet} />\n              <Route exact path=\"/register\" component={NewUserComponent} />\n              <AuthenticationRoute exact path=\"/welcome/:name\" component={Movie} />\n              <AuthenticationRoute exact path=\"/:name/favorites\" component={ListFavoritesComponent} />\n              <AuthenticationRoute exact path=\"/logout\" component={LogoutComponent} />\n              <Route exact path=\"/error\" component={ErrorComponent} />\n            </Switch>\n            <Footer />\n          </Layout>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default MovieBuilder;\n","import React from 'react';\nimport MovieBuilder from './containers/MovieBuilder/MovieBuilder';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <div>\n             <MovieBuilder />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}